{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nexport const analyzeLearningStyle = async transcript => {\n  try {\n    if (!transcript) {\n      throw new Error('Transcript is required for analysis');\n    }\n    const response = await axios.post(`${API_URL}/analyze`, {\n      transcript\n    });\n    return response.data.analysis;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Error analyzing learning style:', error);\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to analyze learning style. Please try again.');\n  }\n};","map":{"version":3,"names":["axios","API_URL","analyzeLearningStyle","transcript","Error","response","post","data","analysis","error","_error$response","_error$response$data","console","code"],"sources":["D:/rvce/src/services/llmService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\ninterface AnalysisResponse {\r\n  analysis: string;\r\n}\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const analyzeLearningStyle = async (transcript: string): Promise<string> => {\r\n  try {\r\n    if (!transcript) {\r\n      throw new Error('Transcript is required for analysis');\r\n    }\r\n\r\n    const response = await axios.post<AnalysisResponse>(`${API_URL}/analyze`, { transcript });\r\n    return response.data.analysis;\r\n  } catch (error: any) {\r\n    console.error('Error analyzing learning style:', error);\r\n    if (error.response?.data?.error) {\r\n      throw new Error(error.response.data.error);\r\n    }\r\n    if (error.code === 'ERR_NETWORK') {\r\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\r\n    }\r\n    throw new Error('Failed to analyze learning style. Please try again.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAMzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,UAAkB,IAAsB;EACjF,IAAI;IACF,IAAI,CAACA,UAAU,EAAE;MACf,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAmB,GAAGL,OAAO,UAAU,EAAE;MAAEE;IAAW,CAAC,CAAC;IACzF,OAAOE,QAAQ,CAACE,IAAI,CAACC,QAAQ;EAC/B,CAAC,CAAC,OAAOC,KAAU,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACnBC,OAAO,CAACH,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,KAAAC,eAAA,GAAID,KAAK,CAACJ,QAAQ,cAAAK,eAAA,gBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,eAApBA,oBAAA,CAAsBF,KAAK,EAAE;MAC/B,MAAM,IAAIL,KAAK,CAACK,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC;IAC5C;IACA,IAAIA,KAAK,CAACI,IAAI,KAAK,aAAa,EAAE;MAChC,MAAM,IAAIT,KAAK,CAAC,yEAAyE,CAAC;IAC5F;IACA,MAAM,IAAIA,KAAK,CAAC,qDAAqD,CAAC;EACxE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}