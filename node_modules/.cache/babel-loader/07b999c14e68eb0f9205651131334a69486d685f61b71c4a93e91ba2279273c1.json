{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Generate a unique user ID or get it from your auth system\nconst getUserId = () => {\n  let userId = localStorage.getItem('userId');\n  if (!userId) {\n    userId = Math.random().toString(36).substring(2) + Date.now().toString(36);\n    localStorage.setItem('userId', userId);\n  }\n  return userId;\n};\nexport const saveTutorProfile = async profile => {\n  try {\n    const userId = getUserId();\n    await axios.post(`${API_URL}/profile`, {\n      userId,\n      profile\n    });\n  } catch (error) {\n    console.error('Error saving tutor profile:', error);\n    throw new Error('Failed to save tutor profile');\n  }\n};\nexport const getTutorProfile = async () => {\n  try {\n    const userId = getUserId();\n    const response = await axios.get(`${API_URL}/profile/${userId}`);\n    return response.data.profile;\n  } catch (error) {\n    console.error('Error getting tutor profile:', error);\n    return null;\n  }\n};\nexport const hasTutorProfile = async () => {\n  try {\n    const profile = await getTutorProfile();\n    return profile !== null;\n  } catch (error) {\n    return false;\n  }\n};\nexport const clearTutorProfile = async () => {\n  try {\n    const userId = getUserId();\n    await axios.delete(`${API_URL}/profile/${userId}`);\n    localStorage.removeItem('userId');\n  } catch (error) {\n    console.error('Error clearing tutor profile:', error);\n    throw new Error('Failed to clear tutor profile');\n  }\n};","map":{"version":3,"names":["axios","API_URL","getUserId","userId","localStorage","getItem","Math","random","toString","substring","Date","now","setItem","saveTutorProfile","profile","post","error","console","Error","getTutorProfile","response","get","data","hasTutorProfile","clearTutorProfile","delete","removeItem"],"sources":["D:/rvce/src/services/profileService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\ninterface TutorProfile {\r\n  name: string;\r\n  style: string;\r\n  tone: string;\r\n  characteristics: string[];\r\n  useAnalogies: boolean;\r\n  stepByStep: boolean;\r\n}\r\n\r\ninterface ProfileResponse {\r\n  profile: TutorProfile | null;\r\n}\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Generate a unique user ID or get it from your auth system\r\nconst getUserId = (): string => {\r\n  let userId = localStorage.getItem('userId');\r\n  if (!userId) {\r\n    userId = Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n  return userId;\r\n};\r\n\r\nexport const saveTutorProfile = async (profile: TutorProfile): Promise<void> => {\r\n  try {\r\n    const userId = getUserId();\r\n    await axios.post(`${API_URL}/profile`, { userId, profile });\r\n  } catch (error) {\r\n    console.error('Error saving tutor profile:', error);\r\n    throw new Error('Failed to save tutor profile');\r\n  }\r\n};\r\n\r\nexport const getTutorProfile = async (): Promise<TutorProfile | null> => {\r\n  try {\r\n    const userId = getUserId();\r\n    const response = await axios.get<ProfileResponse>(`${API_URL}/profile/${userId}`);\r\n    return response.data.profile;\r\n  } catch (error) {\r\n    console.error('Error getting tutor profile:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const hasTutorProfile = async (): Promise<boolean> => {\r\n  try {\r\n    const profile = await getTutorProfile();\r\n    return profile !== null;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const clearTutorProfile = async (): Promise<void> => {\r\n  try {\r\n    const userId = getUserId();\r\n    await axios.delete(`${API_URL}/profile/${userId}`);\r\n    localStorage.removeItem('userId');\r\n  } catch (error) {\r\n    console.error('Error clearing tutor profile:', error);\r\n    throw new Error('Failed to clear tutor profile');\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAezB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAc;EAC9B,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC3C,IAAI,CAACF,MAAM,EAAE;IACXA,MAAM,GAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACH,QAAQ,CAAC,EAAE,CAAC;IAC1EJ,YAAY,CAACQ,OAAO,CAAC,QAAQ,EAAET,MAAM,CAAC;EACxC;EACA,OAAOA,MAAM;AACf,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,MAAOC,OAAqB,IAAoB;EAC9E,IAAI;IACF,MAAMX,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAMF,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,UAAU,EAAE;MAAEE,MAAM;MAAEW;IAAQ,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAA0C;EACvE,IAAI;IACF,MAAMhB,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAMkB,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAkB,GAAGpB,OAAO,YAAYE,MAAM,EAAE,CAAC;IACjF,OAAOiB,QAAQ,CAACE,IAAI,CAACR,OAAO;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAA8B;EAC3D,IAAI;IACF,MAAMT,OAAO,GAAG,MAAMK,eAAe,CAAC,CAAC;IACvC,OAAOL,OAAO,KAAK,IAAI;EACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAA2B;EAC1D,IAAI;IACF,MAAMrB,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAMF,KAAK,CAACyB,MAAM,CAAC,GAAGxB,OAAO,YAAYE,MAAM,EAAE,CAAC;IAClDC,YAAY,CAACsB,UAAU,CAAC,QAAQ,CAAC;EACnC,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}