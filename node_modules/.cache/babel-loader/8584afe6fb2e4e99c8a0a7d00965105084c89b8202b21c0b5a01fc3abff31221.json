{"ast":null,"code":"import axios from 'axios';\nconst GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';\nconst API_KEY = process.env.REACT_APP_GROQ_API_KEY;\nexport const analyzeLearningStyle = async content => {\n  try {\n    const response = await axios.post(GROQ_API_URL, {\n      model: 'mixtral-8x7b-32768',\n      messages: [{\n        role: 'system',\n        content: 'You are an AI that analyzes learning content and generates a teaching style profile. Respond with a JSON object containing the following fields: tone (string), style (string), useAnalogies (boolean), stepByStep (boolean).'\n      }, {\n        role: 'user',\n        content: `Analyze this learning content and generate a teaching style profile: ${content}`\n      }],\n      temperature: 0.7,\n      max_tokens: 500\n    }, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const profile = JSON.parse(response.data.choices[0].message.content);\n    return profile;\n  } catch (error) {\n    console.error('Error analyzing learning style:', error);\n    throw error;\n  }\n};\nexport const generateTutorResponse = async (topic, profile) => {\n  try {\n    const response = await axios.post(GROQ_API_URL, {\n      model: 'mixtral-8x7b-32768',\n      messages: [{\n        role: 'system',\n        content: `You are an AI tutor with the following teaching style:\n              - Tone: ${profile.tone}\n              - Style: ${profile.style}\n              - Use Analogies: ${profile.useAnalogies}\n              - Step-by-Step: ${profile.stepByStep}\n              Teach the topic in this style.`\n      }, {\n        role: 'user',\n        content: `Please explain: ${topic}`\n      }],\n      temperature: 0.7,\n      max_tokens: 1000\n    }, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data.choices[0].message.content;\n  } catch (error) {\n    console.error('Error generating tutor response:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","GROQ_API_URL","API_KEY","process","env","REACT_APP_GROQ_API_KEY","analyzeLearningStyle","content","response","post","model","messages","role","temperature","max_tokens","headers","profile","JSON","parse","data","choices","message","error","console","generateTutorResponse","topic","tone","style","useAnalogies","stepByStep"],"sources":["D:/rvce/src/services/llmService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\ninterface TutorProfile {\r\n  tone: string;\r\n  style: string;\r\n  useAnalogies: boolean;\r\n  stepByStep: boolean;\r\n}\r\n\r\nconst GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';\r\nconst API_KEY = process.env.REACT_APP_GROQ_API_KEY;\r\n\r\nexport const analyzeLearningStyle = async (content: string): Promise<TutorProfile> => {\r\n  try {\r\n    const response = await axios.post(\r\n      GROQ_API_URL,\r\n      {\r\n        model: 'mixtral-8x7b-32768',\r\n        messages: [\r\n          {\r\n            role: 'system',\r\n            content: 'You are an AI that analyzes learning content and generates a teaching style profile. Respond with a JSON object containing the following fields: tone (string), style (string), useAnalogies (boolean), stepByStep (boolean).'\r\n          },\r\n          {\r\n            role: 'user',\r\n            content: `Analyze this learning content and generate a teaching style profile: ${content}`\r\n          }\r\n        ],\r\n        temperature: 0.7,\r\n        max_tokens: 500\r\n      },\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n\r\n    const profile = JSON.parse(response.data.choices[0].message.content);\r\n    return profile;\r\n  } catch (error) {\r\n    console.error('Error analyzing learning style:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const generateTutorResponse = async (\r\n  topic: string,\r\n  profile: TutorProfile\r\n): Promise<string> => {\r\n  try {\r\n    const response = await axios.post(\r\n      GROQ_API_URL,\r\n      {\r\n        model: 'mixtral-8x7b-32768',\r\n        messages: [\r\n          {\r\n            role: 'system',\r\n            content: `You are an AI tutor with the following teaching style:\r\n              - Tone: ${profile.tone}\r\n              - Style: ${profile.style}\r\n              - Use Analogies: ${profile.useAnalogies}\r\n              - Step-by-Step: ${profile.stepByStep}\r\n              Teach the topic in this style.`\r\n          },\r\n          {\r\n            role: 'user',\r\n            content: `Please explain: ${topic}`\r\n          }\r\n        ],\r\n        temperature: 0.7,\r\n        max_tokens: 1000\r\n      },\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n\r\n    return response.data.choices[0].message.content;\r\n  } catch (error) {\r\n    console.error('Error generating tutor response:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AASzB,MAAMC,YAAY,GAAG,iDAAiD;AACtE,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAElD,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,OAAe,IAA4B;EACpF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/BR,YAAY,EACZ;MACES,KAAK,EAAE,oBAAoB;MAC3BC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,QAAQ;QACdL,OAAO,EAAE;MACX,CAAC,EACD;QACEK,IAAI,EAAE,MAAM;QACZL,OAAO,EAAE,wEAAwEA,OAAO;MAC1F,CAAC,CACF;MACDM,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE;IACd,CAAC,EACD;MACEC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUb,OAAO,EAAE;QACpC,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,MAAMc,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACV,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACd,OAAO,CAAC;IACpE,OAAOS,OAAO;EAChB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,qBAAqB,GAAG,MAAAA,CACnCC,KAAa,EACbT,OAAqB,KACD;EACpB,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/BR,YAAY,EACZ;MACES,KAAK,EAAE,oBAAoB;MAC3BC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,QAAQ;QACdL,OAAO,EAAE;AACrB,wBAAwBS,OAAO,CAACU,IAAI;AACpC,yBAAyBV,OAAO,CAACW,KAAK;AACtC,iCAAiCX,OAAO,CAACY,YAAY;AACrD,gCAAgCZ,OAAO,CAACa,UAAU;AAClD;MACU,CAAC,EACD;QACEjB,IAAI,EAAE,MAAM;QACZL,OAAO,EAAE,mBAAmBkB,KAAK;MACnC,CAAC,CACF;MACDZ,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE;IACd,CAAC,EACD;MACEC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUb,OAAO,EAAE;QACpC,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,OAAOM,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACd,OAAO;EACjD,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}