{"ast":null,"code":"var _jsxFileName = \"D:\\\\rvce\\\\src\\\\components\\\\UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getVideoTranscript } from '../services/youtubeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  onAnalysisComplete\n}) => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const handleYoutubeSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    setTranscript('');\n    try {\n      const transcriptText = await getVideoTranscript(url);\n      setTranscript(transcriptText);\n      await onAnalysisComplete(transcriptText);\n    } catch (error) {\n      setError(error.message || 'Failed to process video');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleYoutubeSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"youtube-url\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"YouTube Video URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"youtube-url\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: \"Enter YouTube video URL\",\n          className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: `w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: isLoading ? 'Processing...' : 'Analyze Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-red-100 text-red-700 rounded\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: transcript,\n        readOnly: true,\n        className: \"w-full h-64 p-4 border rounded-md bg-gray-50 font-mono text-sm\",\n        style: {\n          resize: 'vertical'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"a/97zABxoxCib0LoIQKle2/0+5U=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","getVideoTranscript","jsxDEV","_jsxDEV","UploadForm","onAnalysisComplete","_s","url","setUrl","error","setError","isLoading","setIsLoading","transcript","setTranscript","handleYoutubeSubmit","e","preventDefault","transcriptText","message","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","placeholder","required","disabled","readOnly","style","resize","_c","$RefreshReg$"],"sources":["D:/rvce/src/components/UploadForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { getVideoTranscript } from '../services/youtubeService';\n\ninterface UploadFormProps {\n  onAnalysisComplete: (transcript: string) => Promise<void>;\n}\n\nconst UploadForm: React.FC<UploadFormProps> = ({ onAnalysisComplete }) => {\n  const [url, setUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [transcript, setTranscript] = useState('');\n\n  const handleYoutubeSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    setTranscript('');\n\n    try {\n      const transcriptText = await getVideoTranscript(url);\n      setTranscript(transcriptText);\n      await onAnalysisComplete(transcriptText);\n    } catch (error: any) {\n      setError(error.message || 'Failed to process video');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow\">\n      <form onSubmit={handleYoutubeSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"youtube-url\" className=\"block text-sm font-medium text-gray-700\">\n            YouTube Video URL\n          </label>\n          <input\n            type=\"text\"\n            id=\"youtube-url\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            placeholder=\"Enter YouTube video URL\"\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n            required\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 ${\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n        >\n          {isLoading ? 'Processing...' : 'Analyze Video'}\n        </button>\n\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-100 text-red-700 rounded\">\n            {error}\n          </div>\n        )}\n      </form>\n\n      {transcript && (\n        <div className=\"mt-6\">\n          <h3 className=\"text-lg font-semibold mb-2\">Transcript:</h3>\n          <textarea\n            value={transcript}\n            readOnly\n            className=\"w-full h-64 p-4 border rounded-md bg-gray-50 font-mono text-sm\"\n            style={{ resize: 'vertical' }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}