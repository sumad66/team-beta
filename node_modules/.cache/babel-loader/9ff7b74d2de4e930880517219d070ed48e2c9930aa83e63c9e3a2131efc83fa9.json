{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nexport const analyzeLearningStyle = async transcript => {\n  try {\n    if (!transcript) {\n      throw new Error('Transcript is required for analysis');\n    }\n    const response = await axios.post(`${API_URL}/analyze`, {\n      transcript\n    });\n    return response.data.analysis;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Error analyzing learning style:', error);\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to analyze learning style. Please try again.');\n  }\n};\nexport const generateTutorResponse = async (topic, profile) => {\n  try {\n    const response = await axios.post(GROQ_API_URL, {\n      model: 'mixtral-8x7b-32768',\n      messages: [{\n        role: 'system',\n        content: `You are an AI tutor with the following teaching style:\n              - Tone: ${profile.tone}\n              - Style: ${profile.style}\n              - Use Analogies: ${profile.useAnalogies}\n              - Step-by-Step: ${profile.stepByStep}\n              Teach the topic in this style.`\n      }, {\n        role: 'user',\n        content: `Please explain: ${topic}`\n      }],\n      temperature: 0.7,\n      max_tokens: 1000\n    }, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data.choices[0].message.content;\n  } catch (error) {\n    console.error('Error generating tutor response:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","analyzeLearningStyle","transcript","Error","response","post","data","analysis","error","_error$response","_error$response$data","console","code","generateTutorResponse","topic","profile","GROQ_API_URL","model","messages","role","content","tone","style","useAnalogies","stepByStep","temperature","max_tokens","headers","API_KEY","choices","message"],"sources":["D:/rvce/src/services/llmService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\ninterface TutorProfile {\r\n  tone: string;\r\n  style: string;\r\n  useAnalogies: boolean;\r\n  stepByStep: boolean;\r\n}\r\n\r\ninterface LLMResponse {\r\n  choices: { message: { content: string } }[];\r\n}\r\n\r\ninterface AnalysisResponse {\r\n  analysis: string;\r\n}\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const analyzeLearningStyle = async (transcript: string): Promise<string> => {\r\n  try {\r\n    if (!transcript) {\r\n      throw new Error('Transcript is required for analysis');\r\n    }\r\n\r\n    const response = await axios.post<AnalysisResponse>(`${API_URL}/analyze`, { transcript });\r\n    return response.data.analysis;\r\n  } catch (error: any) {\r\n    console.error('Error analyzing learning style:', error);\r\n    if (error.response?.data?.error) {\r\n      throw new Error(error.response.data.error);\r\n    }\r\n    if (error.code === 'ERR_NETWORK') {\r\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\r\n    }\r\n    throw new Error('Failed to analyze learning style. Please try again.');\r\n  }\r\n};\r\n\r\nexport const generateTutorResponse = async (\r\n  topic: string,\r\n  profile: TutorProfile\r\n): Promise<string> => {\r\n  try {\r\n    const response = await axios.post<LLMResponse>(\r\n      GROQ_API_URL,\r\n      {\r\n        model: 'mixtral-8x7b-32768',\r\n        messages: [\r\n          {\r\n            role: 'system',\r\n            content: `You are an AI tutor with the following teaching style:\r\n              - Tone: ${profile.tone}\r\n              - Style: ${profile.style}\r\n              - Use Analogies: ${profile.useAnalogies}\r\n              - Step-by-Step: ${profile.stepByStep}\r\n              Teach the topic in this style.`\r\n          },\r\n          {\r\n            role: 'user',\r\n            content: `Please explain: ${topic}`\r\n          }\r\n        ],\r\n        temperature: 0.7,\r\n        max_tokens: 1000\r\n      },\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n\r\n    return response.data.choices[0].message.content;\r\n  } catch (error) {\r\n    console.error('Error generating tutor response:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAiBzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,UAAkB,IAAsB;EACjF,IAAI;IACF,IAAI,CAACA,UAAU,EAAE;MACf,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAmB,GAAGL,OAAO,UAAU,EAAE;MAAEE;IAAW,CAAC,CAAC;IACzF,OAAOE,QAAQ,CAACE,IAAI,CAACC,QAAQ;EAC/B,CAAC,CAAC,OAAOC,KAAU,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACnBC,OAAO,CAACH,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,KAAAC,eAAA,GAAID,KAAK,CAACJ,QAAQ,cAAAK,eAAA,gBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,eAApBA,oBAAA,CAAsBF,KAAK,EAAE;MAC/B,MAAM,IAAIL,KAAK,CAACK,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC;IAC5C;IACA,IAAIA,KAAK,CAACI,IAAI,KAAK,aAAa,EAAE;MAChC,MAAM,IAAIT,KAAK,CAAC,yEAAyE,CAAC;IAC5F;IACA,MAAM,IAAIA,KAAK,CAAC,qDAAqD,CAAC;EACxE;AACF,CAAC;AAED,OAAO,MAAMU,qBAAqB,GAAG,MAAAA,CACnCC,KAAa,EACbC,OAAqB,KACD;EACpB,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/BW,YAAY,EACZ;MACEC,KAAK,EAAE,oBAAoB;MAC3BC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE;AACrB,wBAAwBL,OAAO,CAACM,IAAI;AACpC,yBAAyBN,OAAO,CAACO,KAAK;AACtC,iCAAiCP,OAAO,CAACQ,YAAY;AACrD,gCAAgCR,OAAO,CAACS,UAAU;AAClD;MACU,CAAC,EACD;QACEL,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE,mBAAmBN,KAAK;MACnC,CAAC,CACF;MACDW,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE;IACd,CAAC,EACD;MACEC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUC,OAAO,EAAE;QACpC,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,OAAOxB,QAAQ,CAACE,IAAI,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACV,OAAO;EACjD,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdG,OAAO,CAACH,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}