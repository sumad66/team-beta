{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nexport const analyzeLearningStyle = async transcript => {\n  try {\n    if (!transcript) {\n      throw new Error('Transcript is required for analysis');\n    }\n    const response = await axios.post(`${API_URL}/analyze`, {\n      transcript\n    });\n    return response.data.analysis;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Error analyzing learning style:', error);\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to analyze learning style. Please try again.');\n  }\n};\nexport const generateTutorResponse = async (message, profile) => {\n  try {\n    if (!message) {\n      throw new Error('Message is required');\n    }\n    if (!profile) {\n      throw new Error('Tutor profile is required');\n    }\n    const response = await axios.post(`${API_URL}/chat`, {\n      message,\n      profile\n    });\n    return response.data.response;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Error generating tutor response:', error);\n    if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to generate tutor response. Please try again.');\n  }\n};\nexport const createPersonalizedTeacher = async analysis => {\n  try {\n    if (!analysis) {\n      throw new Error('Analysis is required');\n    }\n    const response = await axios.post(`${API_URL}/create-teacher`, {\n      analysis\n    });\n    return response.data.teacherProfile;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('Error creating personalized teacher:', error);\n    if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to create personalized teacher. Please try again.');\n  }\n};","map":{"version":3,"names":["axios","API_URL","analyzeLearningStyle","transcript","Error","response","post","data","analysis","error","_error$response","_error$response$data","console","code","generateTutorResponse","message","profile","_error$response2","_error$response2$data","createPersonalizedTeacher","teacherProfile","_error$response3","_error$response3$data"],"sources":["D:/rvce/src/services/llmService.ts"],"sourcesContent":["import axios from 'axios';\n\ninterface AnalysisResponse {\n  analysis: string;\n}\n\ninterface TutorResponse {\n  response: string;\n}\n\ninterface TeacherProfile {\n  name: string;\n  style: string;\n  tone: string;\n  strengths: string[];\n  specializations: string[];\n  useAnalogies: boolean;\n  stepByStep: boolean;\n}\n\nconst API_URL = 'http://localhost:5000/api';\n\nexport const analyzeLearningStyle = async (transcript: string): Promise<string> => {\n  try {\n    if (!transcript) {\n      throw new Error('Transcript is required for analysis');\n    }\n\n    const response = await axios.post<AnalysisResponse>(`${API_URL}/analyze`, { transcript });\n    return response.data.analysis;\n  } catch (error: any) {\n    console.error('Error analyzing learning style:', error);\n    if (error.response?.data?.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to analyze learning style. Please try again.');\n  }\n};\n\nexport const generateTutorResponse = async (message: string, profile: any): Promise<string> => {\n  try {\n    if (!message) {\n      throw new Error('Message is required');\n    }\n\n    if (!profile) {\n      throw new Error('Tutor profile is required');\n    }\n\n    const response = await axios.post<TutorResponse>(`${API_URL}/chat`, {\n      message,\n      profile\n    });\n\n    return response.data.response;\n  } catch (error: any) {\n    console.error('Error generating tutor response:', error);\n    if (error.response?.data?.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to generate tutor response. Please try again.');\n  }\n};\n\nexport const createPersonalizedTeacher = async (analysis: string): Promise<TeacherProfile> => {\n  try {\n    if (!analysis) {\n      throw new Error('Analysis is required');\n    }\n\n    const response = await axios.post<{ teacherProfile: TeacherProfile }>(`${API_URL}/create-teacher`, { analysis });\n    return response.data.teacherProfile;\n  } catch (error: any) {\n    console.error('Error creating personalized teacher:', error);\n    if (error.response?.data?.error) {\n      throw new Error(error.response.data.error);\n    }\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Unable to connect to the server. Please check if the server is running.');\n    }\n    throw new Error('Failed to create personalized teacher. Please try again.');\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}